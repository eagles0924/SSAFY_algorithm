# Tree
"""
트리는 비선형 구조이다.
root 노드를 어디로 설정하느냐에 따라 트리 구조가 달라지기 때문에
후보와 방문 여부를 반드시 체크해야 한다.
"""

# binary tree

# 포화 이진 트리

# 완전 이진 트리

"""
1차원 배열에 Tree 저장 (p.47)
"""

"""
1: [2, 3]
2: [4, None]
3: [5, 6]
4: [None, None]
없으면 None으로 표기하자.
"""
# 연습 문제 3
# 과제: 일차원 리스트로 저장한다면 코드를 어떻게 짜야하는가?
# 참고: 그래프처럼 저장하는 방식.

# 순회 구현
# 자식이 없는 걸 표현하기 위해 None 삽입
# for li in nodes:
#     for _ in range(len(li))
#
#         pass


# 이진 탐색 트리
# 코드 확인하기 (GPT 사용도 가능)

# Heap
# 이진 탐색 트리는 개념가지만 알아두기
# 우선순위큐는 힙으로 구현된다.

### 힙이 아닌 이진 트리의 예

import heapq
arr = []

"""
sort() 대신 heap 쓰는 이유
sort: 삽압 및 삭제 구동할 때마다 진행된다. O(NlogN)
heap: O(logN) 만에 삽입 삭제 해도 

이진 트리 활용한 자료 구조
가장 많이 쓰이는 트리: 이진 트리
 - 이진 탐색 트리 (그림으로만 이해)
 - 힙 (그림 + 코드)
"""